PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_VERSION=@PACKAGE_VERSION@

APXS=@APXS@
APACHECTL=@APACHECTL@
PERL=@PERL@

TESTS=t

builddir=.
installbuilddir=$(shell $(APXS) -q installbuilddir)
top_srcdir=$(shell dirname $(installbuilddir))
top_builddir=$(top_srcdir)
include $(installbuilddir)/special.mk

ifdef MOD_PSGI_DEBUG
DEBUG_DEFS=-DDEBUG
else
DEBUG_DEFS=
endif
DEFS=-DMOD_PSGI_VERSION=\"$(PACKAGE_VERSION)\" $(DEBUG_DEFS)
INCLUDES=$(shell $(PERL) -MExtUtils::Embed -e ccopts)
LDFLAGS=$(shell $(PERL) -MExtUtils::Embed -e ldopts)

all: local-shared-build

install: install-modules-yes

clean:
	rm -f mod_psgi.o mod_psgi.lo mod_psgi.slo mod_psgi.la

maintainer-clean:
	git clean -fdx

configure: configure.ac
	autoconf

mod_psgi.c: ppport.h

ppport.h:
	$(PERL) -MDevel::PPPort -e 'Devel::PPPort::WriteFile'

test: .libs/mod_psgi.so
	prove $(TESTS)

reload: install restart

start:
	$(APACHECTL) start
restart:
	$(APACHECTL) restart
stop:
	$(APACHECTL) stop

DIST_DIR=$(PACKAGE_NAME)-$(PACKAGE_VERSION)
DIST_FILE=$(PACKAGE_NAME)-$(PACKAGE_VERSION).tar
dist: ppport.h configure
	rm -f $(DIST_FILE)
	git archive --format=tar --prefix=$(DIST_DIR)/ HEAD > $(DIST_FILE)
	mkdir $(DIST_DIR)
	cp ppport.h configure $(DIST_DIR)
	tar rf $(DIST_FILE) $(DIST_DIR)/ppport.h $(DIST_DIR)/configure
	rm -fr $(DIST_DIR)
	gzip --best $(DIST_FILE)

.PHONY: test maintainer-clean dist
